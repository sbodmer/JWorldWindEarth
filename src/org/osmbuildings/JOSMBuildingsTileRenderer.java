/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.osmbuildings;

import org.worldwindearth.components.layers.buildings.*;
import java.awt.Component;
import java.io.File;
import java.net.URISyntaxException;
import java.net.URL;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author sbodmer
 */
public class JOSMBuildingsTileRenderer extends javax.swing.JPanel implements ListCellRenderer {

    /**
     * Creates new form JBuildingTileRenderer
     */
    public JOSMBuildingsTileRenderer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TF_Title = new javax.swing.JLabel();
        TF_Comments = new javax.swing.JLabel();
        LB_Error = new javax.swing.JLabel();
        LB_Ok = new javax.swing.JLabel();
        LB_State = new javax.swing.JLabel();

        TF_Title.setText("...");

        TF_Comments.setText("...");

        LB_Error.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/worldwindearth/components/layers/buildings/Resources/Icons/16x16/error.png"))); // NOI18N

        LB_Ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/worldwindearth/components/layers/buildings/Resources/Icons/16x16/ok.png"))); // NOI18N

        LB_State.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TF_Comments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TF_Title, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LB_State, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LB_Ok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LB_Error)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TF_Title)
                        .addComponent(LB_State))
                    .addComponent(LB_Ok)
                    .addComponent(LB_Error))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_Comments)
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {
        OSMBuildingsTile t = (OSMBuildingsTile) value;
        TF_Title.setText(t.level + "x" + t.x + "x" + t.y);
        URL url = t.getFetchedURL();
        if (url != null) {
            if (url.getProtocol().equals("file")) {
                try {
                    File f = new File(url.toURI());
                    TF_Comments.setText(f.getName() + " (" + f.length() + " bytes)");
                    setToolTipText(f.getPath());
                    
                } catch (URISyntaxException ex) {
                    TF_Comments.setText(url.toString());
                }
            } else {
                TF_Comments.setText(url.toString());
            }

        } else {
            TF_Comments.setText("...");
        }

        int state = t.getState();
        if (state == OSMBuildingsTile.STATE_LOADING) {
            LB_Error.setVisible(false);
            LB_Ok.setVisible(false);
            LB_State.setText("loading...");

        } else if (state == OSMBuildingsTile.STATE_LOADED) {
            LB_State.setText("loaded");
            LB_Error.setVisible(false);
            LB_Error.setToolTipText(null);
            LB_Ok.setVisible(true);

        } else if (state == OSMBuildingsTile.STATE_WRONG_HTTP_CODE) {
            LB_State.setText("Wrong http code");
            LB_Error.setVisible(true);
            LB_Error.setToolTipText("Wrong http code");
            LB_Ok.setVisible(false);

        } else if (state == OSMBuildingsTile.STATE_JSON_NOT_FOUND) {
            LB_State.setText("JSON not found");
            LB_Error.setVisible(true);
            LB_Error.setToolTipText("JSON not found");
            LB_Ok.setVisible(false);
        }

        if (isSelected) {
            setBackground(list.getSelectionBackground());

        } else {
            setBackground(list.getBackground());
        }
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel LB_Error;
    protected javax.swing.JLabel LB_Ok;
    protected javax.swing.JLabel LB_State;
    protected javax.swing.JLabel TF_Comments;
    protected javax.swing.JLabel TF_Title;
    // End of variables declaration//GEN-END:variables
}
